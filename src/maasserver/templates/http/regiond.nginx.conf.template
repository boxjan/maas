# -*- mode: nginx -*-

upstream regiond-webapp {
{{for worker_socket_path in worker_socket_paths}}
    server unix:{{worker_socket_path}};
{{endfor}}
}

upstream apiserver {
    server unix:{{apiserver_socket_path}};
}

upstream temporal-metrics {
    server localhost:9000;
}

proxy_http_version 1.1;
proxy_buffering off;
proxy_read_timeout 900s; # to match the Twisted one
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Forwarded-Host $http_host;

error_log /tmp/error.log debug;

server {
    {{if tls_enabled}}
    listen [::]:{{tls_port}} ssl http2;
    listen {{tls_port}} ssl http2;
    ssl_certificate {{tls_cert_path}};
    ssl_certificate_key {{tls_key_path}};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "AES256+EECDH AES256+EDH !aNULL";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    add_header Strict-Transport-Security 'max-age=15552000; includeSubdomains' always;
    {{else}}
    listen [::]:{{http_port}};
    listen {{http_port}};
    {{endif}}

    absolute_redirect off;

    location = / {
        return 301 /MAAS/r/;
    }

    location ~ ^/MAAS/?$ {
        return 301 /MAAS/r/;
    }

    location /MAAS {
        proxy_pass http://regiond-webapp;
    }

    location /MAAS/ws {
        proxy_pass http://regiond-webapp;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Upgrade $http_upgrade;
    }

    # apiserver Prometheus endpoint
    location = /MAAS/a/metrics {
        proxy_pass http://apiserver/metrics;
    }

    # block remote access to the machines endpoints for now since it doesn't
    # filter machines by user
    location = /MAAS/a/v1/machines {
        return 404;
    }

    location /MAAS/a/ {
        rewrite ^/MAAS/a/(.*)$ /api/$1 break;
        proxy_pass http://apiserver;
        proxy_redirect http://localhost/api/ $scheme://$host:$server_port/MAAS/a/;
    }

    # static assets

    location ~ ^/MAAS/machine-resources/(.*)$ {
        root {{static_dir}}/machine-resources;
        try_files /$1 =404;
    }

    location = /MAAS/docs {
        return 301 /MAAS/docs/;
    }

    location ~ ^/MAAS/docs/(.*)$ {
        root {{static_dir}}/web/static/docs;
        # redirect to the UI version if the page is not found by default
        try_files /$1 /$1.html /ui/$1 ui/$1.html /$1/index.html =404;
    }

    location ~ ^/MAAS/assets/(.*)$ {
        root {{static_dir}}/web/static/assets;
        try_files /$1 =404;
    }

    location ~ ^/MAAS/r/(.*)$ {
        root {{static_dir}}/web/static;
        try_files /$1 /index.html =404;
    }

    location /favicon.ico {
        root {{static_dir}}/web/static;
        try_files /maas-favicon-32px.png =404;
    }

    location /metrics/temporal {
        proxy_pass http://temporal-metrics/metrics;
    }

    location ~ ^/MAAS/boot-resources/([^/]+)/?(.*)$ {
        # /MAAS/boot-resources/$hash/$labels -> {{boot_resources_dir}}/$hash (labels ignored)
        # /MAAS/boot-resources/$dir/.../$file -> {{boot_resources_dir}}/$dir/.../$file (full path)
        autoindex off;
        root {{boot_resources_dir}};
        try_files /$1 /$1/$2 =404;
    }
}

{{if tls_enabled}}
# when TLS is enabled, HTTP access still need to be allowed for some resources
server {
    listen [::]:{{http_port}};
    listen {{http_port}};

    location /MAAS/rpc/ {
        proxy_pass http://regiond-webapp;
    }

    location /MAAS/metadata/ {
        proxy_pass http://regiond-webapp;
    }

    # required for enlistment
    location /MAAS/api/2.0/machines {
        proxy_pass http://regiond-webapp;
    }

    location = /MAAS/maas-run-scripts {
        proxy_pass http://regiond-webapp;
    }

    location ~ ^/MAAS/machine-resources/(.*)$ {
        root {{static_dir}}/machine-resources;
        try_files /$1 =404;
    }

    # required for rackd to get images
    location /MAAS/images-stream {
        proxy_pass http://regiond-webapp;
    }

    location ~ ^/MAAS/boot-resources/([^/]+)/?(.*)$ {
        # /MAAS/boot-resources/$hash/$labels -> {{boot_resources_dir}}/$hash (labels ignored)
        # /MAAS/boot-resources/$dir/.../$file -> {{boot_resources_dir}}/$dir/.../$file (full path)
        autoindex off;
        root {{boot_resources_dir}};
        try_files /$1 /$1/$2 =404;
    }

    location /MAAS {
        return 301 https://$host:{{tls_port}}$request_uri;
    }
}
{{endif}}
